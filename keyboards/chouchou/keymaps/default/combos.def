#define INNER KC_BSPC
#define OUTER KC_SPC
#define INNER_R KC_R_BSPC
#define OUTER_R KC_R_SPC

// R
COMB(R_OUTER, S(KC_R), KC_R, OUTER)
COMB(R_INNER, KC_RIGHT_ANGLE_BRACKET, KC_R, INNER)
COMB(R_BOTH, KC_PRINT_SCREEN, KC_R, INNER, OUTER)
COMB(R_R_OUTER, S(KC_R), KC_R_R, OUTER_R)
COMB(R_R_INNER, KC_RIGHT_ANGLE_BRACKET, KC_R_R, INNER_R)
COMB(R_R_BOTH, KC_PRINT_SCREEN, KC_R_R, INNER_R, OUTER_R)
// S
COMB(S_OUTER, S(KC_S), KC_S, OUTER)
COMB(S_INNER, KC_RIGHT_CURLY_BRACE, KC_S, INNER)
COMB(S_BOTH, KC_BRIGHTNESS_UP, KC_S, INNER, OUTER)
COMB(S_R_OUTER, S(KC_S), KC_R_S, OUTER_R)
COMB(S_R_INNER, KC_RIGHT_CURLY_BRACE, KC_R_S, INNER_R)
COMB(S_R_BOTH, KC_BRIGHTNESS_UP, KC_R_S, INNER_R, OUTER_R)
// N
COMB(N_OUTER, S(KC_N), KC_N, OUTER)
COMB(N_INNER, KC_RIGHT_BRACKET, KC_N, INNER)
COMB(N_BOTH, KC_BRIGHTNESS_DOWN, KC_N, INNER, OUTER)
COMB(N_R_OUTER, S(KC_N), KC_R_N, OUTER_R)
COMB(N_R_INNER, KC_RIGHT_BRACKET, KC_R_N, INNER_R)
COMB(N_R_BOTH, KC_BRIGHTNESS_DOWN, KC_R_N, INNER_R, OUTER_R)
// I
COMB(I_OUTER, S(KC_I), KC_I, OUTER)
COMB(I_INNER, KC_RIGHT_PAREN, KC_I, INNER)
COMB(I_BOTH, KC_MEDIA_PLAY_PAUSE, KC_I, INNER, OUTER)
COMB(I_R_OUTER, S(KC_I), KC_R_I, OUTER_R)
COMB(I_R_INNER, KC_RIGHT_PAREN, KC_R_I, INNER_R)
COMB(I_R_BOTH, KC_MEDIA_PLAY_PAUSE, KC_R_I, INNER_R, OUTER_R)
// A
COMB(A_OUTER, S(KC_A), KC_A, OUTER)
COMB(A_INNER, KC_LEFT_ANGLE_BRACKET, KC_A, INNER)
COMB(A_BOTH, KC_MEDIA_NEXT_TRACK, KC_A, INNER, OUTER)
COMB(A_R_OUTER, S(KC_A), KC_R_A, OUTER_R)
COMB(A_R_INNER, KC_LEFT_ANGLE_BRACKET, KC_R_A, INNER_R)
COMB(A_R_BOTH, KC_MEDIA_NEXT_TRACK, KC_R_A, INNER_R, OUTER_R)
// O
COMB(O_OUTER, S(KC_O), KC_O, OUTER)
COMB(O_INNER, KC_LEFT_CURLY_BRACE, KC_O, INNER)
COMB(O_BOTH, KC_KB_VOLUME_UP, KC_O, INNER, OUTER)
COMB(O_R_OUTER, S(KC_O), KC_R_O, OUTER_R)
COMB(O_R_INNER, KC_LEFT_CURLY_BRACE, KC_R_O, INNER_R)
COMB(O_R_BOTH, KC_KB_VOLUME_UP, KC_R_O, INNER_R, OUTER_R)
// T
COMB(T_OUTER, S(KC_T), KC_T, OUTER)
COMB(T_INNER, KC_LEFT_BRACKET, KC_T, INNER)
COMB(T_BOTH, KC_KB_VOLUME_DOWN, KC_T, INNER, OUTER)
COMB(T_R_OUTER, S(KC_T), KC_R_T, OUTER_R)
COMB(T_R_INNER, KC_LEFT_BRACKET, KC_R_T, INNER_R)
COMB(T_R_BOTH, KC_KB_VOLUME_DOWN, KC_R_T, INNER_R, OUTER_R)
// E
COMB(E_OUTER, S(KC_E), KC_E, OUTER)
COMB(E_INNER, KC_LEFT_PAREN, KC_E, INNER)
COMB(E_BOTH, KC_MEDIA_PREV_TRACK, KC_E, INNER, OUTER)
COMB(E_R_OUTER, S(KC_E), KC_R_E, OUTER_R)
COMB(E_R_INNER, KC_LEFT_PAREN, KC_R_E, INNER_R)
COMB(E_R_BOTH, KC_MEDIA_PREV_TRACK, KC_R_E, INNER_R, OUTER_R)
// C
COMB(C, KC_C, KC_O, KC_E)
COMB(C_OUTER, S(KC_C), KC_O, KC_E, OUTER)
COMB(C_INNER, KC_1, KC_O, KC_E, INNER)
COMB(C_BOTH, KC_F1, KC_O, KC_E, INNER, OUTER)
COMB(C_R, KC_C, KC_R_O, KC_R_E)
COMB(C_R_OUTER, S(KC_C), KC_R_O, KC_R_E, OUTER_R)
COMB(C_R_INNER, KC_1, KC_R_O, KC_R_E, INNER_R)
COMB(C_R_BOTH, KC_F1, KC_R_O, KC_R_E, INNER_R, OUTER_R)
// U
COMB(U, KC_U, KC_O, KC_T)
COMB(U_OUTER, S(KC_U), KC_O, KC_T, OUTER)
COMB(U_INNER, KC_2, KC_O, KC_T, INNER)
COMB(U_BOTH, KC_F2, KC_O, KC_T, INNER, OUTER)
COMB(U_R, KC_U, KC_R_O, KC_R_T)
COMB(U_R_OUTER, S(KC_U), KC_R_O, KC_R_T, OUTER_R)
COMB(U_R_INNER, KC_2, KC_R_O, KC_R_T, INNER_R)
COMB(U_R_BOTH, KC_F2, KC_R_O, KC_R_T, INNER_R, OUTER_R)
// Q
COMB(Q, KC_Q, KC_A, KC_T)
COMB(Q_OUTER, S(KC_Q), KC_A, KC_T, OUTER)
COMB(Q_INNER, KC_3, KC_A, KC_T, INNER)
COMB(Q_BOTH, KC_F3, KC_A, KC_T, INNER, OUTER)
COMB(Q_R, KC_Q, KC_R_A, KC_R_T)
COMB(Q_R_OUTER, S(KC_Q), KC_R_A, KC_R_T, OUTER_R)
COMB(Q_R_INNER, KC_3, KC_R_A, KC_R_T, INNER_R)
COMB(Q_R_BOTH, KC_F3, KC_R_A, KC_R_T, INNER_R, OUTER_R)
// L
COMB(L, KC_L, KC_A, KC_O)
COMB(L_OUTER, S(KC_L), KC_A, KC_O, OUTER)
COMB(L_INNER, KC_4, KC_A, KC_O, INNER)
COMB(L_BOTH, KC_F4, KC_A, KC_O, INNER, OUTER)
COMB(L_R, KC_L, KC_R_A, KC_R_O)
COMB(L_R_OUTER, S(KC_L), KC_R_A, KC_R_O, OUTER_R)
COMB(L_R_INNER, KC_4, KC_R_A, KC_R_O, INNER_R)
COMB(L_R_BOTH, KC_F4, KC_R_A, KC_R_O, INNER_R, OUTER_R)
// Y
COMB(Y, KC_Y, KC_N, KC_I)
COMB(Y_OUTER, S(KC_Y), KC_N, KC_I, OUTER)
COMB(Y_INNER, KC_5, KC_N, KC_I, INNER)
COMB(Y_BOTH, KC_F5, KC_N, KC_I, INNER, OUTER)
COMB(Y_R, KC_Y, KC_R_N, KC_R_I)
COMB(Y_R_OUTER, S(KC_Y), KC_R_N, KC_R_I, OUTER_R)
COMB(Y_R_INNER, KC_5, KC_R_N, KC_R_I, INNER_R)
COMB(Y_R_BOTH, KC_F5, KC_R_N, KC_R_I, INNER_R, OUTER_R)
// F
COMB(F, KC_F, KC_S, KC_I)
COMB(F_OUTER, S(KC_F), KC_S, KC_I, OUTER)
COMB(F_INNER, KC_6, KC_S, KC_I, INNER)
COMB(F_BOTH, KC_F6, KC_S, KC_I, INNER, OUTER)
COMB(F_R, KC_F, KC_R_S, KC_R_I)
COMB(F_R_OUTER, S(KC_F), KC_R_S, KC_R_I, OUTER_R)
COMB(F_R_INNER, KC_6, KC_R_S, KC_R_I, INNER_R)
COMB(F_R_BOTH, KC_F6, KC_R_S, KC_R_I, INNER_R, OUTER_R)
// P
COMB(P, KC_P, KC_S, KC_N)
COMB(P_OUTER, S(KC_P), KC_S, KC_N, OUTER)
COMB(P_INNER, KC_7, KC_S, KC_N, INNER)
COMB(P_BOTH, KC_F7, KC_S, KC_N, INNER, OUTER)
COMB(P_R, KC_P, KC_R_S, KC_R_N)
COMB(P_R_OUTER, S(KC_P), KC_R_S, KC_R_N, OUTER_R)
COMB(P_R_INNER, KC_7, KC_R_S, KC_R_N, INNER_R)
COMB(P_R_BOTH, KC_F7, KC_R_S, KC_R_N, INNER_R, OUTER_R)
// Z
COMB(Z, KC_Z, KC_R, KC_N)
COMB(Z_OUTER, S(KC_Z), KC_R, KC_N, OUTER)
COMB(Z_INNER, KC_8, KC_R, KC_N, INNER)
COMB(Z_BOTH, KC_F8, KC_R, KC_N, INNER, OUTER)
COMB(Z_R, KC_Z, KC_R_R, KC_R_N)
COMB(Z_R_OUTER, S(KC_Z), KC_R_R, KC_R_N, OUTER_R)
COMB(Z_R_INNER, KC_8, KC_R_R, KC_R_N, INNER_R)
COMB(Z_R_BOTH, KC_F8, KC_R_R, KC_R_N, INNER_R, OUTER_R)
// B
COMB(B, KC_B, KC_R, KC_S)
COMB(B_OUTER, S(KC_B), KC_R, KC_S, OUTER)
COMB(B_INNER, KC_9, KC_R, KC_S, INNER)
COMB(B_BOTH, KC_F9, KC_R, KC_S, INNER, OUTER)
COMB(B_R, KC_B, KC_R_R, KC_R_S)
COMB(B_R_OUTER, S(KC_B), KC_R_R, KC_R_S, OUTER_R)
COMB(B_R_INNER, KC_9, KC_R_R, KC_R_S, INNER_R)
COMB(B_R_BOTH, KC_F9, KC_R_R, KC_R_S, INNER_R, OUTER_R)
// H
COMB(H, KC_H, KC_T, KC_E)
COMB(H_OUTER, S(KC_H), KC_T, KC_E, OUTER)
COMB(H_INNER, KC_0, KC_T, KC_E, INNER)
COMB(H_BOTH, KC_F10, KC_T, KC_E, INNER, OUTER)
COMB(H_R, KC_H, KC_R_T, KC_R_E)
COMB(H_R_OUTER, S(KC_H), KC_R_T, KC_R_E, OUTER_R)
COMB(H_R_INNER, KC_0, KC_R_T, KC_R_E, INNER_R)
COMB(H_R_BOTH, KC_F10, KC_R_T, KC_R_E, INNER_R, OUTER_R)
// D
COMB(D, KC_D, KC_A, KC_E)
COMB(D_OUTER, S(KC_D), KC_A, KC_E, OUTER)
COMB(D_INNER, KC_AT, KC_A, KC_E, INNER)
COMB(D_BOTH, KC_F11, KC_A, KC_E, INNER, OUTER)
COMB(D_R, KC_D, KC_R_A, KC_R_E)
COMB(D_R_OUTER, S(KC_D), KC_R_A, KC_R_E, OUTER_R)
COMB(D_R_INNER, KC_AT, KC_R_A, KC_R_E, INNER_R)
COMB(D_R_BOTH, KC_F11, KC_R_A, KC_R_E, INNER_R, OUTER_R)
// G
COMB(G, KC_G, KC_R, KC_I)
COMB(G_OUTER, S(KC_G), KC_R, KC_I, OUTER)
COMB(G_INNER, KC_HASH, KC_R, KC_I, INNER)
COMB(G_BOTH, KC_F12, KC_R, KC_I, INNER, OUTER)
COMB(G_R, KC_G, KC_R_R, KC_R_I)
COMB(G_R_OUTER, S(KC_G), KC_R_R, KC_R_I, OUTER_R)
COMB(G_R_INNER, KC_HASH, KC_R_R, KC_R_I, INNER_R)
COMB(G_R_BOTH, KC_F12, KC_R_R, KC_R_I, INNER_R, OUTER_R)
// X
COMB(X, KC_X, KC_R, KC_T)
COMB(X_OUTER, S(KC_X), KC_R, KC_T, OUTER)
COMB(X_INNER, KC_CIRCUMFLEX, KC_R, KC_T, INNER)
COMB(X_BOTH, C(KC_X), KC_R, KC_T, INNER, OUTER)
COMB(X_RR, KC_X, KC_R_R, KC_R_T)
COMB(X_R_OUTER, S(KC_X), KC_R_R, KC_R_T, OUTER_R)
COMB(X_R_INNER, KC_CIRCUMFLEX, KC_R_R, KC_R_T, INNER_R)
COMB(X_R_BOTH, C(KC_X), KC_R_R, KC_R_T, INNER_R, OUTER_R)
// // K
COMB(K, KC_K, KC_O, KC_I)
COMB(K_OUTER, S(KC_K), KC_O, KC_I, OUTER)
COMB(K_INNER, KC_PLUS, KC_O, KC_I, INNER)
COMB(K_BOTH, C(KC_C), KC_O, KC_I, INNER, OUTER)
COMB(K_R, KC_K, KC_R_O, KC_R_I)
COMB(K_R_OUTER, S(KC_K), KC_R_O, KC_R_I, OUTER_R)
COMB(K_R_INNER, KC_PLUS, KC_R_O, KC_R_I, INNER_R)
COMB(K_R_BOTH, C(KC_C), KC_R_O, KC_R_I, INNER_R, OUTER_R)
// V
COMB(V, KC_V, KC_S, KC_E)
COMB(V_OUTER, S(KC_V), KC_S, KC_E, OUTER)
COMB(V_INNER, KC_ASTERISK, KC_S, KC_E, INNER)
COMB(V_BOTH, C(KC_V), KC_S, KC_E, INNER, OUTER)
COMB(V_R, KC_V, KC_R_S, KC_R_E)
COMB(V_R_OUTER, S(KC_V), KC_R_S, KC_R_E, OUTER_R)
COMB(V_R_INNER, KC_ASTERISK, KC_R_S, KC_R_E, INNER_R)
COMB(V_R_BOTH, C(KC_V), KC_R_S, KC_R_E, INNER_R, OUTER_R)
// J
COMB(J, KC_J, KC_A, KC_N)
COMB(J_OUTER, S(KC_J), KC_A, KC_N, OUTER)
COMB(J_INNER, KC_EQUAL, KC_A, KC_N, INNER)
COMB(J_BOTH, C(KC_Z), KC_A, KC_N, INNER, OUTER)
COMB(J_R, KC_J, KC_R_A, KC_R_N)
COMB(J_R_OUTER, S(KC_J), KC_R_A, KC_R_N, OUTER_R)
COMB(J_R_INNER, KC_EQUAL, KC_R_A, KC_R_N, INNER_R)
COMB(J_R_BOTH, C(KC_Z), KC_R_A, KC_R_N, INNER_R, OUTER_R)
// M
COMB(M, KC_M, KC_R, KC_E)
COMB(M_OUTER, S(KC_M), KC_R, KC_E, OUTER)
COMB(M_INNER, KC_DOLLAR, KC_R, KC_E, INNER)
COMB(M_R, KC_M, KC_R_R, KC_R_E)
COMB(M_R_OUTER, S(KC_M), KC_R_R, KC_R_E, OUTER_R)
COMB(M_R_INNER, KC_DOLLAR, KC_R_R, KC_R_E, INNER_R)
// W
COMB(W, KC_W, KC_A, KC_I)
COMB(W_OUTER, S(KC_W), KC_A, KC_I, OUTER)
COMB(W_INNER, KC_AMPERSAND, KC_A, KC_I, INNER)
COMB(W_R, KC_W, KC_R_A, KC_R_I)
COMB(W_R_OUTER, S(KC_W), KC_R_A, KC_R_I, OUTER_R)
COMB(W_R_INNER, KC_AMPERSAND, KC_R_A, KC_R_I, INNER_R)
// /
COMB(SLASH, KC_SLASH, KC_S, KC_T)
COMB(SLASH_OUTER, KC_BACKSLASH, KC_S, KC_T, OUTER)
COMB(SLASH_INNER, KC_PIPE, KC_S, KC_T, INNER)
COMB(SLASH_R, KC_SLASH, KC_R_S, KC_R_T)
COMB(SLASH_R_OUTER, KC_BACKSLASH, KC_R_S, KC_R_T, OUTER_R)
COMB(SLASH_R_INNER, KC_PIPE, KC_R_S, KC_R_T, INNER_R)
// -
COMB(MINUS, KC_MINUS, KC_O, KC_N)
COMB(MINUS_OUTER, KC_UNDERSCORE, KC_O, KC_N, OUTER)
COMB(MINUS_INNER, KC_PERCENT, KC_O, KC_N, INNER)
COMB(MINUS_R, KC_MINUS, KC_R_O, KC_R_N)
COMB(MINUS_R_OUTER, KC_UNDERSCORE, KC_R_O, KC_R_N, OUTER_R)
COMB(MINUS_R_INNER, KC_PERCENT, KC_R_O, KC_R_N, INNER_R)
// ?
COMB(QUESTION, KC_QUESTION, KC_T, KC_I)
COMB(QUESTION_OUTER, KC_EXCLAIM, KC_T, KC_I, OUTER)
COMB(QUESTION_INNER, KC_CAPS_LOCK, KC_T, KC_I, INNER)
COMB(QUESTION_R, KC_QUESTION, KC_R_T, KC_R_I)
COMB(QUESTION_R_OUTER, KC_EXCLAIM, KC_R_T, KC_R_I, OUTER_R)
COMB(QUESTION_R_INNER, KC_CAPS_LOCK, KC_R_T, KC_R_I, INNER_R)
// ,
COMB(COMMA, KC_COMMA, KC_N, KC_E)
COMB(COMMA_OUTER, KC_DOT, KC_N, KC_E, OUTER)
COMB(COMMA_INNER, KC_TILDE, KC_N, KC_E, INNER)
COMB(COMMA_R, KC_COMMA, KC_R_N, KC_R_E)
COMB(COMMA_R_OUTER, KC_DOT, KC_R_N, KC_R_E, OUTER_R)
COMB(COMMA_R_INNER, KC_TILDE, KC_R_N, KC_R_E, INNER_R)
// ;
COMB(SEMICOLON, KC_SEMICOLON, KC_R, KC_O)
COMB(SEMICOLON_OUTER, KC_COLON, KC_R, KC_O, OUTER)
COMB(SEMICOLON_R, KC_SEMICOLON, KC_R_R, KC_R_O)
COMB(SEMICOLON_R_OUTER, KC_COLON, KC_R_R, KC_R_O, OUTER_R)
// ; alternate
COMB(SEMICOLON_ALT, KC_SEMICOLON, KC_O, KC_N, KC_E)
COMB(SEMICOLON_ALT_OUTER, KC_COLON, KC_O, KC_N, KC_E, OUTER)
COMB(SEMICOLON_ALT_R, KC_SEMICOLON, KC_R_O, KC_R_N, KC_R_E)
COMB(SEMICOLON_R_ALT_OUTER, KC_COLON, KC_R_O, KC_R_N, KC_R_E, OUTER_R)
// '
COMB(QUOTE, KC_QUOTE, KC_A, KC_S)
COMB(QUOTE_OUTER, KC_DOUBLE_QUOTE, KC_A, KC_S, OUTER)
COMB(QUOTE_INNER, KC_GRAVE, KC_A, KC_S, INNER)
COMB(QUOTE_R, KC_QUOTE, KC_R_A, KC_R_S)
COMB(QUOTE_R_OUTER, KC_DOUBLE_QUOTE, KC_R_A, KC_R_S, OUTER_R)
COMB(QUOTE_R_INNER, KC_GRAVE, KC_R_A, KC_R_S, INNER_R)
// ' alternate
COMB(QUOTE_ALT, KC_QUOTE, KC_O, KC_N, KC_I)
COMB(QUOTE_ALT_OUTER, KC_DOUBLE_QUOTE, KC_O, KC_N, KC_I, OUTER)
COMB(QUOTE_ALT_INNER, KC_GRAVE, KC_O, KC_N, KC_I, INNER)
COMB(QUOTE_ALT_R, KC_QUOTE, KC_R_O, KC_R_N, KC_R_I)
COMB(QUOTE_R_ALT_OUTER, KC_DOUBLE_QUOTE, KC_R_O, KC_R_N, KC_R_I, OUTER_R)
COMB(QUOTE_R_ALT_INNER, KC_GRAVE, KC_R_O, KC_R_N, KC_R_I, INNER_R)
// Tab
COMB(TAB, KC_TAB, KC_S, KC_N, KC_I)
COMB(TAB_OUTER, KC_DELETE, KC_S, KC_N, KC_I, OUTER)
COMB(TAB_INNER, KC_INSERT, KC_S, KC_N, KC_I, INNER)
COMB(TAB_R, KC_TAB, KC_R_S, KC_R_N, KC_R_I)
COMB(TAB_R_OUTER, KC_DELETE, KC_R_S, KC_R_N, KC_R_I, OUTER_R)
COMB(TAB_R_INNER, KC_INSERT, KC_R_S, KC_R_N, KC_R_I, INNER_R)
// Enter
COMB(ENTER, KC_ENTER, KC_O, KC_T, KC_E)
COMB(ENTER_OUTER, KC_ESCAPE, KC_O, KC_T, KC_E, OUTER)
COMB(ENTER_INNER, OSM(MOD_RALT), KC_O, KC_T, KC_E, INNER)
COMB(ENTER_R, KC_ENTER, KC_R_O, KC_R_T, KC_R_E)
COMB(ENTER_R_OUTER, KC_ESCAPE, KC_R_O, KC_R_T, KC_R_E, OUTER_R)
COMB(ENTER_R_INNER, OSM(MOD_RALT), KC_R_O, KC_R_T, KC_R_E, INNER_R)
// Gui
COMB(LEFT_GUI, KC_STICKY_LGUI, KC_R, KC_A)
COMB(LEFT_GUI_OUTER, KC_RIGHT, KC_R, KC_A, OUTER)
COMB(LEFT_GUI_INNER, KC_PAGE_UP, KC_R, KC_A, INNER)
COMB(LEFT_GUI_R, KC_STICKY_LGUI, KC_R_R, KC_R_A)
COMB(LEFT_R_GUI_OUTER, KC_RIGHT, KC_R_R, KC_R_A, OUTER_R)
COMB(LEFT_R_GUI_INNER, KC_PAGE_UP, KC_R_R, KC_R_A, INNER_R)
// Alt
COMB(LEFT_ALT, KC_STICKY_LALT, KC_S, KC_O)
COMB(LEFT_ALT_OUTER, KC_UP, KC_S, KC_O, OUTER)
COMB(LEFT_ALT_INNER, KC_HOME, KC_S, KC_O, INNER)
COMB(LEFT_ALT_R, KC_STICKY_LALT, KC_R_S, KC_R_O)
COMB(LEFT_R_ALT_OUTER, KC_UP, KC_R_S, KC_R_O, OUTER_R)
COMB(LEFT_R_ALT_INNER, KC_HOME, KC_R_S, KC_R_O, INNER_R)
// Ctrl
COMB(LEFT_CTRL, KC_STICKY_LCTL, KC_N, KC_T)
COMB(LEFT_CTRL_OUTER, KC_DOWN, KC_N, KC_T, OUTER)
COMB(LEFT_CTRL_INNER, KC_END, KC_N, KC_T, INNER)
COMB(LEFT_CTRL_R, KC_STICKY_LCTL, KC_R_N, KC_R_T)
COMB(LEFT_R_CTRL_OUTER, KC_DOWN, KC_R_N, KC_R_T, OUTER_R)
COMB(LEFT_R_CTRL_INNER, KC_END, KC_R_N, KC_R_T, INNER_R)
// Shift
COMB(LEFT_SHIFT, KC_STICKY_LSFT, KC_I, KC_E)
COMB(LEFT_SHIFT_OUTER, KC_LEFT, KC_I, KC_E, OUTER)
COMB(LEFT_SHIFT_INNER, KC_PAGE_DOWN, KC_I, KC_E, INNER)
COMB(LEFT_SHIFT_R, KC_STICKY_LSFT, KC_R_I, KC_R_E)
COMB(LEFT_R_SHIFT_OUTER, KC_LEFT, KC_R_I, KC_R_E, OUTER_R)
COMB(LEFT_R_SHIFT_INNER, KC_PAGE_DOWN, KC_R_I, KC_R_E, INNER_R)
