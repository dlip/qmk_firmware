// #include "abbr.def"

// Punctuation
// SUBS(b_z, "z", KC_V, KC_W)
// SUBS(b_q, "q", KC_F, KC_P)
// SUBS(b_dot, SS_TAP(X_DOT), KC_CAG_J, KC_K)
// SUBS(b_comma, SS_TAP(X_COMMA), KC_X, KC_CAG_J)
// SUBS(b_quot, SS_TAP(X_QUOT), KC_X, KC_K)
// SUBS(b_scln, SS_TAP(X_SCLN), KC_G, KC_K)
// SUBS(b_ques, SS_TAP(X_SLSH), KC_G, KC_X)

// // SUBS(c_b, "", KC_B, KC_COMBO_ALT1)
// SUBS(c_y, SS_TAP(X_ESC), KC_Y, KC_COMBO_ALT1)
// SUBS(c_o, SS_TAP(X_DEL), KC_O, KC_COMBO_ALT1)
// SUBS(c_u, SS_TAP(X_ENT), KC_U, KC_COMBO_ALT1)
// SUBS(c_c, "[", KC_SFT_C, KC_COMBO_ALT1)
// SUBS(c_i, "]", KC_ALT_I, KC_COMBO_ALT1)
// SUBS(c_e, "-", KC_GUI_E, KC_COMBO_ALT1)
// SUBS(c_a, "=", KC_CTL_A, KC_COMBO_ALT1)
// // SUBS(c_g, "", KC_G, KC_COMBO_ALT1)
// // SUBS(c_x, "", KC_X, KC_COMBO_ALT1)
// SUBS(c_j, "\\", KC_CAG_J, KC_COMBO_ALT1)
// SUBS(c_k, "/", KC_K, KC_COMBO_ALT1)
// SUBS(c_l, "z", KC_L, KC_COMBO_ALT1)
// SUBS(c_d, "q", KC_D, KC_COMBO_ALT1)
// // SUBS(c_w, "", KC_W, KC_COMBO_ALT1)
// // SUBS(c_v, "", KC_V, KC_COMBO_ALT1)
// SUBS(c_h, ",", KC_CTL_H, KC_COMBO_ALT1)
// SUBS(c_t, ".", KC_GUI_T, KC_COMBO_ALT1)
// SUBS(c_s, "'", KC_ALT_S, KC_COMBO_ALT1)
// SUBS(c_n, ";", KC_SFT_N, KC_COMBO_ALT1)
// // SUBS(c_r, "", KC_R, KC_COMBO_ALT1)
// // SUBS(c_m, "", KC_CAG_M, KC_COMBO_ALT1)
// // SUBS(c_f "", KC_F, KC_COMBO_ALT1)
// // SUBS(c_p "", KC_P, KC_COMBO_ALT1)


// SUBS(quot, SS_TAP(X_BSPC)"' ", KC_COMBO, KC_QUOT)
// SUBS(quotS, SS_TAP(X_BSPC)"\" ", KC_COMBO, KC_COMBO_SFT, KC_QUOT)
// SUBS(appve, SS_TAP(X_BSPC)"'ve ", KC_COMBO, KC_QUOT, KC_V)
// SUBS(apps, SS_TAP(X_BSPC)"'s ", KC_COMBO, KC_QUOT, KC_GUI_S)
// SUBS(appnt, SS_TAP(X_BSPC)"n't ", KC_COMBO, KC_QUOT, KC_CTL_T)

// Personal
SUBS(b_Dane, "Dane", KC_COMBO, KC_D, KC_X)
SUBS(b_Lipscombe, "Lipscombe", KC_COMBO, KC_L, KC_X)
SUBS(b_danelipscombeatgmaildotcom, "danelipscombe@gmail.com", KC_COMBO, KC_G, KC_X)
